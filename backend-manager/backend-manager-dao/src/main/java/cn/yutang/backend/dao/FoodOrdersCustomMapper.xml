<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yutang.backend.dao.FoodOrdersCustomMapper">
  <resultMap id="BaseResultMap" type="cn.yutang.backend.pojo.po.FoodOrdersCustom">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="or_id" jdbcType="VARCHAR" property="orId" />
    <result column="tb_id" jdbcType="BIGINT" property="tbId" />
    <result column="or_beginTime" jdbcType="TIMESTAMP" property="orBegintime" />
    <result column="or_endTime" jdbcType="TIMESTAMP" property="orEndtime" />
    <result column="or_status" jdbcType="INTEGER" property="orStatus" />
    <result column="or_totalPrice" jdbcType="DOUBLE" property="orTotalprice" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />

    <result column="ct_name" jdbcType="VARCHAR" property="ctName"/>
    <collection property="pd" column="pd_id" ofType="cn.yutang.backend.pojo.po.PayDetail">
      <id property="pdId" column="pd_id"/>
      <result property="pmId" column="pm_id"/>
      <result property="pdAmmount" column="pd_ammount"/>
      <result property="orId" column="or_id"/>
    </collection>
    <collection property="pm" column="pm_id" ofType="cn.yutang.backend.pojo.po.PayMethod">
      <id property="pmId" column="pm_id"/>
      <result property="pmName" column="pm_name"/>
    </collection>
  </resultMap>

  <sql id="base_method_list">
    pm_id AS pmId,pm_name AS pmName,shop_id AS shopId
  </sql>

  <sql id="base_customerType_list">
    ct_id AS ctId,ct_name AS ctName,shop_id AS shopId
  </sql>

  <sql id="Base_Column_List">
    o.or_id, o.tb_id, o.or_beginTime, o.or_endTime,o.or_status, o.or_totalPrice, o.shop_id,o.ct_id,
    s.ct_name, d.pd_id, d.pm_id, d.pd_ammount, d.or_id,
    m.pm_id, m.pm_name
  </sql>
  <sql id="Where_Clause">
    <where>
      <if test="orderCondition != null">
        o.shop_id=#{orderCondition.shopId}
        <if test="orderCondition.orBegintime != null and orderCondition.orBegintime != ''">
          and o.or_endTime >= #{orderCondition.orBegintime}
        </if>
        <if test="orderCondition.orEndtime != null and orderCondition.orEndtime != ''">
          and o.or_endTime <![CDATA[ <= ]]> #{orderCondition.orEndtime}
        </if>
        <if test="orderCondition.tbId != null and orderCondition.tbId != 0">
          and  o.tb_id like '%${orderCondition.tbId}%'
        </if>
        <if test="orderCondition.orId != null and orderCondition.orId != ''">
          and  o.or_id like '%${orderCondition.orId}%'
        </if>
        <if test="orderCondition.pmId != null and orderCondition.pmId != ''">
          and  d.pm_id = #{orderCondition.pmId}
        </if>
        <if test="orderCondition.ctId != null and orderCondition.ctId != ''">
          and  o.ct_id = #{orderCondition.ctId}
        </if>
      </if>
    </where>
  </sql>



  <select id="findOrders" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM FoodOrders o
    LEFT JOIN CustomerType s ON o.ct_id=s.ct_id
    LEFT JOIN PayDetail d ON o.or_id=d.or_id
    LEFT JOIN PayMethod m ON d.pm_id=m.pm_id
    <include refid="Where_Clause"/>
    /*GROUP BY o.or_id*/
    limit #{page.offset},#{page.limit}
  </select>

  <select id="findCount" resultType="long">
    SELECT COUNT(1) FROM FoodOrders o
    LEFT JOIN CustomerType s ON o.ct_id=s.ct_id
    LEFT JOIN PayDetail d ON o.or_id=d.or_id
    LEFT JOIN PayMethod m ON d.pm_id=m.pm_id
    <include refid="Where_Clause"/>
  </select>

<select id="findMethod" resultType="cn.yutang.backend.pojo.po.PayMethod">
  SELECT
  <include refid="base_method_list"/>
  FROM PayMethod WHERE  shop_id=#{shopId}
</select>

  <select id="findCustomer" resultType="cn.yutang.backend.pojo.po.CustomerType">
    SELECT
    <include refid="base_customerType_list"/>
    FROM CustomerType WHERE  shop_id=#{shopId}
  </select>


  <select id="getMonthCount" resultType="Double">
    SELECT  SUM(or_totalPrice)  FROM  FoodOrders
    WHERE or_endTime >= #{date1} AND or_endTime <![CDATA[ <= ]]> #{date2}
  </select>


  <select id="getDayCount" resultType="Double">
    SELECT  SUM(or_totalPrice)  FROM  FoodOrders
    WHERE or_endTime >= #{day1} AND or_endTime <![CDATA[ <= ]]> #{day2}
  </select>

</mapper>