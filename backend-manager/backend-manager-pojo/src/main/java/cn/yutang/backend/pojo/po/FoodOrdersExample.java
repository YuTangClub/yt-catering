package cn.yutang.backend.pojo.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FoodOrdersExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public FoodOrdersExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOrIdIsNull() {
            addCriterion("or_id is null");
            return (Criteria) this;
        }

        public Criteria andOrIdIsNotNull() {
            addCriterion("or_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrIdEqualTo(String value) {
            addCriterion("or_id =", value, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdNotEqualTo(String value) {
            addCriterion("or_id <>", value, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdGreaterThan(String value) {
            addCriterion("or_id >", value, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdGreaterThanOrEqualTo(String value) {
            addCriterion("or_id >=", value, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdLessThan(String value) {
            addCriterion("or_id <", value, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdLessThanOrEqualTo(String value) {
            addCriterion("or_id <=", value, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdLike(String value) {
            addCriterion("or_id like", value, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdNotLike(String value) {
            addCriterion("or_id not like", value, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdIn(List<String> values) {
            addCriterion("or_id in", values, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdNotIn(List<String> values) {
            addCriterion("or_id not in", values, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdBetween(String value1, String value2) {
            addCriterion("or_id between", value1, value2, "orId");
            return (Criteria) this;
        }

        public Criteria andOrIdNotBetween(String value1, String value2) {
            addCriterion("or_id not between", value1, value2, "orId");
            return (Criteria) this;
        }

        public Criteria andTbIdIsNull() {
            addCriterion("tb_id is null");
            return (Criteria) this;
        }

        public Criteria andTbIdIsNotNull() {
            addCriterion("tb_id is not null");
            return (Criteria) this;
        }

        public Criteria andTbIdEqualTo(Long value) {
            addCriterion("tb_id =", value, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdNotEqualTo(Long value) {
            addCriterion("tb_id <>", value, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdGreaterThan(Long value) {
            addCriterion("tb_id >", value, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdGreaterThanOrEqualTo(Long value) {
            addCriterion("tb_id >=", value, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdLessThan(Long value) {
            addCriterion("tb_id <", value, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdLessThanOrEqualTo(Long value) {
            addCriterion("tb_id <=", value, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdIn(List<Long> values) {
            addCriterion("tb_id in", values, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdNotIn(List<Long> values) {
            addCriterion("tb_id not in", values, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdBetween(Long value1, Long value2) {
            addCriterion("tb_id between", value1, value2, "tbId");
            return (Criteria) this;
        }

        public Criteria andTbIdNotBetween(Long value1, Long value2) {
            addCriterion("tb_id not between", value1, value2, "tbId");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeIsNull() {
            addCriterion("or_beginTime is null");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeIsNotNull() {
            addCriterion("or_beginTime is not null");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeEqualTo(Date value) {
            addCriterion("or_beginTime =", value, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeNotEqualTo(Date value) {
            addCriterion("or_beginTime <>", value, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeGreaterThan(Date value) {
            addCriterion("or_beginTime >", value, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeGreaterThanOrEqualTo(Date value) {
            addCriterion("or_beginTime >=", value, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeLessThan(Date value) {
            addCriterion("or_beginTime <", value, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeLessThanOrEqualTo(Date value) {
            addCriterion("or_beginTime <=", value, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeIn(List<Date> values) {
            addCriterion("or_beginTime in", values, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeNotIn(List<Date> values) {
            addCriterion("or_beginTime not in", values, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeBetween(Date value1, Date value2) {
            addCriterion("or_beginTime between", value1, value2, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrBegintimeNotBetween(Date value1, Date value2) {
            addCriterion("or_beginTime not between", value1, value2, "orBegintime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeIsNull() {
            addCriterion("or_endTime is null");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeIsNotNull() {
            addCriterion("or_endTime is not null");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeEqualTo(Date value) {
            addCriterion("or_endTime =", value, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeNotEqualTo(Date value) {
            addCriterion("or_endTime <>", value, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeGreaterThan(Date value) {
            addCriterion("or_endTime >", value, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("or_endTime >=", value, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeLessThan(Date value) {
            addCriterion("or_endTime <", value, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeLessThanOrEqualTo(Date value) {
            addCriterion("or_endTime <=", value, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeIn(List<Date> values) {
            addCriterion("or_endTime in", values, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeNotIn(List<Date> values) {
            addCriterion("or_endTime not in", values, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeBetween(Date value1, Date value2) {
            addCriterion("or_endTime between", value1, value2, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrEndtimeNotBetween(Date value1, Date value2) {
            addCriterion("or_endTime not between", value1, value2, "orEndtime");
            return (Criteria) this;
        }

        public Criteria andOrStatusIsNull() {
            addCriterion("or_status is null");
            return (Criteria) this;
        }

        public Criteria andOrStatusIsNotNull() {
            addCriterion("or_status is not null");
            return (Criteria) this;
        }

        public Criteria andOrStatusEqualTo(Integer value) {
            addCriterion("or_status =", value, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusNotEqualTo(Integer value) {
            addCriterion("or_status <>", value, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusGreaterThan(Integer value) {
            addCriterion("or_status >", value, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("or_status >=", value, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusLessThan(Integer value) {
            addCriterion("or_status <", value, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusLessThanOrEqualTo(Integer value) {
            addCriterion("or_status <=", value, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusIn(List<Integer> values) {
            addCriterion("or_status in", values, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusNotIn(List<Integer> values) {
            addCriterion("or_status not in", values, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusBetween(Integer value1, Integer value2) {
            addCriterion("or_status between", value1, value2, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("or_status not between", value1, value2, "orStatus");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceIsNull() {
            addCriterion("or_totalPrice is null");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceIsNotNull() {
            addCriterion("or_totalPrice is not null");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceEqualTo(Double value) {
            addCriterion("or_totalPrice =", value, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceNotEqualTo(Double value) {
            addCriterion("or_totalPrice <>", value, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceGreaterThan(Double value) {
            addCriterion("or_totalPrice >", value, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("or_totalPrice >=", value, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceLessThan(Double value) {
            addCriterion("or_totalPrice <", value, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceLessThanOrEqualTo(Double value) {
            addCriterion("or_totalPrice <=", value, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceIn(List<Double> values) {
            addCriterion("or_totalPrice in", values, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceNotIn(List<Double> values) {
            addCriterion("or_totalPrice not in", values, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceBetween(Double value1, Double value2) {
            addCriterion("or_totalPrice between", value1, value2, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andOrTotalpriceNotBetween(Double value1, Double value2) {
            addCriterion("or_totalPrice not between", value1, value2, "orTotalprice");
            return (Criteria) this;
        }

        public Criteria andShopIdIsNull() {
            addCriterion("shop_id is null");
            return (Criteria) this;
        }

        public Criteria andShopIdIsNotNull() {
            addCriterion("shop_id is not null");
            return (Criteria) this;
        }

        public Criteria andShopIdEqualTo(Integer value) {
            addCriterion("shop_id =", value, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdNotEqualTo(Integer value) {
            addCriterion("shop_id <>", value, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdGreaterThan(Integer value) {
            addCriterion("shop_id >", value, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("shop_id >=", value, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdLessThan(Integer value) {
            addCriterion("shop_id <", value, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdLessThanOrEqualTo(Integer value) {
            addCriterion("shop_id <=", value, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdIn(List<Integer> values) {
            addCriterion("shop_id in", values, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdNotIn(List<Integer> values) {
            addCriterion("shop_id not in", values, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdBetween(Integer value1, Integer value2) {
            addCriterion("shop_id between", value1, value2, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdNotBetween(Integer value1, Integer value2) {
            addCriterion("shop_id not between", value1, value2, "shopId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FoodOrders
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FoodOrders
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}